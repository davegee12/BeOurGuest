// <auto-generated />
using System;
using BeOurGuest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeOurGuest.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BeOurGuest.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cuisine")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("CharacterId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("BeOurGuest.Models.Like", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Image")
                        .IsRequired();

                    b.Property<int>("RegUserId");

                    b.Property<int>("RestaurantId");

                    b.Property<int?>("RestaurantLikedLikeId");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("LikeId");

                    b.HasIndex("RegUserId");

                    b.HasIndex("RestaurantId")
                        .IsUnique();

                    b.HasIndex("RestaurantLikedLikeId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("BeOurGuest.Models.RegUser", b =>
                {
                    b.Property<int>("RegUserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FName")
                        .IsRequired();

                    b.Property<string>("Image");

                    b.Property<string>("LName")
                        .IsRequired();

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Price");

                    b.Property<string>("SecondCharacter");

                    b.Property<string>("ThirdCharacter");

                    b.Property<int?>("TopCharacterCharacterId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("RegUserId");

                    b.HasIndex("TopCharacterCharacterId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeOurGuest.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("APIId");

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("GuestRegUserId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Rating");

                    b.Property<DateTime>("UpdateAt");

                    b.HasKey("RestaurantId");

                    b.HasIndex("GuestRegUserId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("BeOurGuest.Models.Like", b =>
                {
                    b.HasOne("BeOurGuest.Models.RegUser", "Liker")
                        .WithMany("RestaurantsLiked")
                        .HasForeignKey("RegUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeOurGuest.Models.Restaurant")
                        .WithOne("RestaurantsLiked")
                        .HasForeignKey("BeOurGuest.Models.Like", "RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeOurGuest.Models.Like", "RestaurantLiked")
                        .WithMany()
                        .HasForeignKey("RestaurantLikedLikeId");
                });

            modelBuilder.Entity("BeOurGuest.Models.RegUser", b =>
                {
                    b.HasOne("BeOurGuest.Models.Character", "TopCharacter")
                        .WithMany("UsersWithThisCharacter")
                        .HasForeignKey("TopCharacterCharacterId");
                });

            modelBuilder.Entity("BeOurGuest.Models.Restaurant", b =>
                {
                    b.HasOne("BeOurGuest.Models.RegUser", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestRegUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
